_answers_file: .copier-answers.ssf-ci.yml
_envops: {'trim_blocks': true}
_subdirectory: template
_templates_suffix: .copier-jinja

# Built-in values
failure_permitted_builtins:
  type: json
  when: false
  default: ['^amazonlinux-2-', '^fedora-41-', '-master$']
os_shortnames:
  type: yaml
  when: false
  default:
    AlmaLinux OS: almalinux
    Fedora Linux: fedora
os_versions:
  type: yaml
  when: false
  default: |
    AlmaLinux OS: [9, 8]
    Amazon Linux: [2023, 2]
    CentOS: ['stream9']
    Debian: [12, 11]
    Fedora Linux: [41, 40]
    openSUSE:  ['leap-156', 'tmbl-latest']
    Oracle Linux: [9, 8]
    Rocky Linux: [9, 8]
    Ubuntu: [2404, 2204, 2004]
salt_versions:
  type: json
  when: false
  default: ['master', '3007-6', '3006-14']

# Questions
formula_name:
  type: str
  help: What is your formula name? (e.g. the top-level formula directory name)
  validator: |
    {% if not formula_name %}
      Formula name is required
    {% endif %}
supported_oses:
  type: str
  multiselect: true
  help: Which OSes would you like the formula tested on?
  choices:
    - AlmaLinux OS
    - Amazon Linux
    - CentOS
    - Debian
    - Fedora Linux
    - openSUSE
    - Oracle Linux
    - Rocky Linux
    - Ubuntu
  default:
    - AlmaLinux OS
    - Amazon Linux
    - CentOS
    - Debian
    - Fedora Linux
    - openSUSE
    - Oracle Linux
    - Rocky Linux
    - Ubuntu
  validator: |
    {% if not supported_oses %}
      At least one supported OS is required for testing
    {% endif %}
failure_permitted_patterns:
  type: json
  help: |
    Enter a list of patterns that match those test instances that should allow failure.
       These are in addition to the built-in patterns which are:
       {{ failure_permitted_builtins }}
  default: []
failure_permitted_ignored:
  type: json
  help: |
    Enter a list of "failure_permitted" patterns to ignore.
       These would typically be one or more of the built-in patterns which are:
       {{ failure_permitted_builtins }}
  default: []
renovate_extend_presets:
  type: json
  help: Enter a list of Renovate presets you would like your configuration to extend from
  default: ["github>saltstack-formulas/.github", "github>saltstack-formulas/.github:copier"]
renovate_ignore_presets:
  type: json
  help: Enter a list of Renovate presets you would like your configuration to ignore
  default: []

# Computed values
project_is_TEMPLATE:
  type: bool
  when: false
  default: '{{ formula_name == "TEMPLATE" }}'
failure_permitted_pattern:
  type: str
  help: Use these RegEx patterns to match those test instances where failure is permitted
  when: false
  default: |
    {% set patterns = failure_permitted_builtins + failure_permitted_patterns %}
    {% set patterns = patterns|reject("in", failure_permitted_ignored)|list %}
    {% set pattern = "({})".format(patterns|join("|")) %}
    {{ pattern }}{% set _ = None %}
gha_supported_oses:
  type: json
  help: The OSes that we currently support on GitHub Actions. This will expand over time
  when: false
  default: |
    {{ ["Debian", "Ubuntu"]|to_json }}
test_instances:
  type: json
  help: A list of test instances of the form `debian-12-master` or `fedora-41-3006-7`
  when: false
  default: |
    {% set ns = namespace(instances=[]) %}
    {% for salt_ver in salt_versions %}
    {%   for os_name in supported_oses %}
    {%     for os_ver in os_versions.get(os_name, []) %}
    {%       set os_shortname = os_shortnames[os_name]|d(os_name|lower|replace(" ","")) %}
    {%       set instance = "-".join([os_shortname, os_ver|string, salt_ver]) %}
    {%       set ns.instances = ns.instances + [instance] %}
    {%     endfor %}
    {%   endfor %}
    {% endfor %}
    {{ ns.instances|to_json }}
gha_test_instances:
  type: json
  help: As above but only those currently supported on GitHub Actions. This will
          eventually be removed.
  when: false
  default: |
    {% set ns = namespace(instances=[]) %}
    {% for salt_ver in salt_versions %}
    {%   set gha_supported_oses = supported_oses|select("in", gha_supported_oses)|list %}
    {%   for os_name in gha_supported_oses %}
    {%     for os_ver in os_versions.get(os_name, []) %}
    {%       set os_shortname = os_shortnames[os_name]|d(os_name|lower|replace(" ","")) %}
    {%       set instance = "-".join([os_shortname, os_ver|string, salt_ver]) %}
    {%       set ns.instances = ns.instances + [instance] %}
    {%     endfor %}
    {%   endfor %}
    {% endfor %}
    {{ ns.instances|to_json }}

# Dynamic questions/values
release_using_gha:
  type: bool
  help: Do you want to process a release using GitHub Actions?
  when: '{{ gha_test_instances }}'
  default:  false
gha_checks_to_ignore:
  type: json
  help: A list of GHA status checks to be ignored by `poseidon/wait-for-status-checks`.
          i.e. equivalent to GitLab's `.test_instance_failure_permitted`.
          Takes the form `Test / Kitchen (debian-12-master)`.
  when: false
  default: |
    {% set ns = namespace(checks_to_ignore=["Release / Collect results"]) %}
    {% set gha_test_instances = gha_test_instances if release_using_gha else [] %}
    {% for instance in gha_test_instances if instance|regex_search(failure_permitted_pattern) %}
    {%   set ns.checks_to_ignore = ns.checks_to_ignore + ["Test / Kitchen ({})".format(instance)] %}
    {% endfor %}
    {{ ns.checks_to_ignore|to_json }}
